// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using TrainersHub.Models.Strava;
//
//    var stravaStatsModel = StravaStatsModel.FromJson(jsonString);

namespace TrainersHub.Models.Strava
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class StravaStatsModel
    {
        [JsonProperty("biggest_ride_distance")]
        public long BiggestRideDistance { get; set; }

        [JsonProperty("biggest_climb_elevation_gain")]
        public double BiggestClimbElevationGain { get; set; }

        [JsonProperty("recent_ride_totals")]
        public Totals RecentRideTotals { get; set; }

        [JsonProperty("all_ride_totals")]
        public Totals AllRideTotals { get; set; }

        [JsonProperty("recent_run_totals")]
        public Totals RecentRunTotals { get; set; }

        [JsonProperty("all_run_totals")]
        public Totals AllRunTotals { get; set; }

        [JsonProperty("recent_swim_totals")]
        public Totals RecentSwimTotals { get; set; }

        [JsonProperty("all_swim_totals")]
        public Totals AllSwimTotals { get; set; }

        [JsonProperty("ytd_ride_totals")]
        public Totals YtdRideTotals { get; set; }

        [JsonProperty("ytd_run_totals")]
        public Totals YtdRunTotals { get; set; }

        [JsonProperty("ytd_swim_totals")]
        public Totals YtdSwimTotals { get; set; }
    }

    public partial class Totals
    {
        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("distance")]
        public double Distance { get; set; }

        [JsonProperty("moving_time")]
        public long MovingTime { get; set; }

        [JsonProperty("elapsed_time")]
        public long ElapsedTime { get; set; }

        [JsonProperty("elevation_gain")]
        public double ElevationGain { get; set; }

        [JsonProperty("achievement_count", NullValueHandling = NullValueHandling.Ignore)]
        public long? AchievementCount { get; set; }
    }

    public partial class StravaStatsModel
    {
        public static StravaStatsModel FromJson(string json) => JsonConvert.DeserializeObject<StravaStatsModel>(json, TrainersHub.Models.Strava.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this StravaStatsModel self) => JsonConvert.SerializeObject(self, TrainersHub.Models.Strava.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
